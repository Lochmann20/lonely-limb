<div class="body" id="h1">
<h1>Experience</h1>

<section>
    <div class="hidden">
        <img src="/public/vsc.png" alt="" width="15%">
        <p>Visual Studio Code</p>
    </div>
    
    <div class="hidden">
        <img src="/public/vsc.png" alt="" width="15%">
        <p>HTML</p>
    </div>

    <div class="hidden">
        <img src="/public/vsc.png" alt="" width="15%">
        <p>CSS</p>
    </div>

    <div class="hidden">
        <img src="/public/vsc.png" alt="" width="15%">
        <p>Javascript</p>
    </div>

    <div class="hidden">
        <img src="/public/vsc.png" alt="" width="15%">
        <p>REACT</p>
    </div>

    <div class="hidden">
        <img src="/public/photoshop.png" alt="" width="15%">
        <p>Photoshop</p>
    </div>

    <div class="hidden">
        <img src="/public/blender.png" alt="" width="15%">
        <p>3D Blender</p>
    </div>

    <div class="hidden">
        <img src="/public/figma.png" alt="" width="15%">
        <p>Figma</p>
    </div>

    <div class="hidden">
        <img src="/public/asana.png" alt="" width="15%">
        <p>Asana </p>
    </div>

    <div class="hidden">
        <img src="/public/photoshop.png" alt="" width="15%">
        <p>UX</p>
    </div>

    <div class="hidden">
        <img src="/public/photoshop.png" alt="" width="15%">
        <p>UI</p>
    </div>
</section>

</div>


<script>
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            console.log(entry)
            if(entry.isIntersecting) {
                entry.target.classList.add('show');
            } else {
                entry.target.classList.remove('show');
            }
        });
    });

    const hiddenElements = document.querySelectorAll(".hidden");
    hiddenElements.forEach((el) => observer.observe(el));
</script>

<style>
/* text animation */
    .hidden{
        opacity: 0;
        transition: ease 1.5s;
        transform: translateY(-100%);
        filter: blur(5px);
    }


    .show{
        opacity: 1;
        filter: blur(0);
        transform: translateY(0);
    }




/* HTML */
    .body{
        background-color: rgb(18, 18, 18);
        padding: 50px; 
    }

    h1{
        color: #FFD4B5;
        text-align: center;
        font-size: 26px;
    }

    p{
        color: white;
    }

    section{
        display: grid;
        grid-template-columns: 1fr 1fr;
        text-align: center;
        width: 17em;
        margin: auto;
        margin-bottom: 0em;
    }









    @media screen (min-width: 375px) {
        
    }


    @media screen (min-width: 600px) {
        
    }

    @media screen and (min-width: 999px) {
   
    .body{
        background-color: rgb(18, 18, 18);
        padding: 50px;
    }



    h1{
        color: #FFD4B5;
        text-align: center;
        font-size: 40px;
    }

    p{
        color: white;
    }

    section{
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        text-align: center;
        width: 61em;
        margin: auto;
        margin-bottom: 0em; 
    } 
}


</style>